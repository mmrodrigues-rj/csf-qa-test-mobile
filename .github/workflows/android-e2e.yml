name: Android E2E

on:
  push:
    branches: [ main, ci-setup, feat/* ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  ANDROID_APP_PATH: apps/android/native-demo-app.apk
  APPIUM_PORT: 4723

jobs:
  android-e2e:
    name: E2E on Android (Appium + Emulator)
    runs-on: macos-latest
    timeout-minutes: 35

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Appium 3
        run: |
          npm i -D appium@^3 --no-audit --no-fund
          npx appium -v

      # ====== FIX AQUI: step idempotente que não falha se já instalado ======
      - name: Ensure uiautomator2 driver (idempotent)
        shell: bash
        run: |
          set -euo pipefail

          echo "== Drivers (antes) =="
          npx appium driver list --installed || true

          echo "== Tentando atualizar uiautomator2 =="
          npx appium driver update uiautomator2 || true

          echo "== Garantindo instalação (reinstala se preciso) =="
          # --force força reinstalação se necessário; '|| true' evita quebrar em 'already installed'
          npx appium driver install --force uiautomator2 || true

          echo "== Drivers (depois) =="
          npx appium driver list --installed || true
      # ======================================================================

      - name: Setup Java for Android tooling
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Run Android emulator and E2E tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          target: google_apis
          profile: pixel_5
          disable-animations: true
          emulator-options: "-no-snapshot -no-boot-anim -noaudio"
          script: |
            set -euo pipefail

            echo "▶ Iniciando Appium…"
            npx appium --base-path / --port "$APPIUM_PORT" --log-level warn & APPIUM_PID=$!

            echo "▶ Aguardando Appium responder…"
            for i in {1..60}; do
              if curl -sf "http://127.0.0.1:${APPIUM_PORT}/status" | grep -q '"ready":true'; then
                echo "Appium OK"; break
              fi
              sleep 2
              if [ $i -eq 60 ]; then
                echo "Appium não iniciou a tempo"; kill $APPIUM_PID || true; exit 1
              fi
            done

            echo "▶ Executando testes E2E (Android)…"
            export PLATFORM=android
            export ANDROID_APP="$ANDROID_APP_PATH"
            npm run test:android || TEST_STATUS=$?

            echo "▶ Encerrando Appium…"
            kill $APPIUM_PID || true

            exit ${TEST_STATUS:-0}

      - name: Upload artifacts (if present)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts-android
          path: |
            reports/**
            logs/**
            **/wdio-*.log
          if-no-files-found: ignore
